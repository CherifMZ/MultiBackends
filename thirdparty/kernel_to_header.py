#!/usr/bin/python

import sys
import os
import glob

def stringify(input_file: str, output_path: str, prefix: str):    
    with open(input_file, 'r') as f:
        kernel_source = f.read()

    # manage name and file name
    up_name = input_file.split(os.sep)[-1].split(".")[0].upper()
    lo_name = up_name.lower()
    if lo_name.find("preamble") != -1:
        if input_file.find(".cl") != -1:
            lo_name = "preamble_cl"
        else:
            lo_name = "preamble_cu"

    # compose output file name and path using os.path.join
    output_file = os.path.join(output_path, prefix.lower() + "_" + lo_name + ".h")
    split_kernel_source = kernel_source.split("\n")

    # write to output file
    with open(output_file, 'w') as f:
        f.write("// This file is auto generated by the build script. Do not edit manually.\n")
        f.write(f"#ifndef {prefix.upper()}_{up_name}_H\n")
        f.write(f"#define {prefix.upper()}_{up_name}_H\n\n")
        f.write("namespace kernel {\n")
        f.write("\n")
        # f.write(f"\tconstexpr const char* {lo_name} = R\"({kernel_source})\";\n")
        f.write(f"\tconstexpr const char* {lo_name} =\n")
        for i, line in enumerate(split_kernel_source):
            if i == len(split_kernel_source) - 1:
                f.write(f"\t\t\"{line}\";\n")
            else:
                f.write(f"\t\t\"{line}\\n\"\n")
        f.write("\n}\n\n // end of namespace kernel\n")
        f.write(f"#endif // {prefix.upper()}_{up_name}_H\n")


def main():
    if len(sys.argv) < 3:
        print("Usage: python kernel_to_header.py <input_folder> <input_folder>")
        sys.exit(1)
    input_folder = sys.argv[1] if os.path.isdir(sys.argv[1]) else sys.exit(1)
    output_folder = sys.argv[2]
    if not os.path.exists(output_folder):
        os.makedirs(output_folder)
    
    file_list = glob.glob( os.path.join(input_folder,'**/*.cl'), recursive=True)
    file_list += glob.glob( os.path.join(input_folder,'**/*.cu'), recursive=True)
    for file in file_list:
        stringify(file, output_folder, "CLE")


if __name__ == "__main__":
    main()
