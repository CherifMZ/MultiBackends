
name: Build

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]

jobs:

    build: 

        runs-on: ${{ matrix.os }}
        name: build-${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-latest, windows-latest, macos-latest]

        steps:

            - name: Checkout
              uses: actions/checkout@v3

            - name: Install dependencies (ubuntu)
              if: matrix.os == 'ubuntu-latest'
              run: |
                sudo apt-get update   
                sudo apt-get install -y nvidia-cuda-toolkit 
                sudo ldconfig /usr/local/cuda/lib64
      

            - name: Install dependencies (windows)
              if: matrix.os == 'windows-latest'
              run: |
                choco install opencl-sdk
                choco install cuda
                refreshenv
            
            - name: Install dependencies (macos)
              if: matrix.os == 'macos-latest'
              run: |
                wget https://developer.download.nvidia.com/compute/cuda/11.4.1/local_installers/cuda_11.4.1_mac.dmg
                hdiutil attach cuda_11.4.1_mac.dmg
                sudo installer -pkg /Volumes/CUDAMacOSXInstaller/CUDAMacOSXInstaller.app/Contents/MacOS/CUDAMacOSXInstaller -target /
                hdiutil detach /Volumes/CUDAMacOSXInstaller
      
            - name: Setup cmake
              uses: lukka/get-cmake@v3.26.3

            - name: Configure and build project
              run: |
                cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DCMAKE_CUDA_ARCHITECTURES=61
                cmake --build build --config Release -j 4 

            
